"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[16503],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var r=o.createContext({}),l=function(e){var t=o.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(r.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,r=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=a,k=p["".concat(r,".").concat(d)]||p[d]||h[d]||s;return n?o.createElement(k,c(c({ref:t},u),{},{components:n})):o.createElement(k,c({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,c=new Array(s);c[0]=d;var i={};for(var r in t)hasOwnProperty.call(t,r)&&(i[r]=t[r]);i.originalType=e,i[p]="string"==typeof e?e:a,c[1]=i;for(var l=2;l<s;l++)c[l]=n[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},17672:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return r},default:function(){return k},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var o=n(87462),a=n(63366),s=(n(67294),n(3905)),c=["components"],i={slug:"geting-started-with-push-sdk-socket-api",title:"Getting Started with Push SDK: Socket API\ud83d\udd14",authors:["push"],image:"./cover-image.webp",tags:["Web3","Blockchain","Blockchain Development","Developer"]},r=void 0,l={permalink:"/blog/geting-started-with-push-sdk-socket-api",source:"@site/blog/2023-03-01-push-sdk/index.md",title:"Getting Started with Push SDK: Socket API\ud83d\udd14",description:"Cover image of Getting Started with Push SDK: Socket API\ud83d\udd14",date:"2023-03-01T00:00:00.000Z",formattedDate:"March 1, 2023",tags:[{label:"Web3",permalink:"/blog/tags/web-3"},{label:"Blockchain",permalink:"/blog/tags/blockchain"},{label:"Blockchain Development",permalink:"/blog/tags/blockchain-development"},{label:"Developer",permalink:"/blog/tags/developer"}],readingTime:3.0933333333333333,hasTruncateMarker:!0,authors:[{name:"Push Protocol",url:"https://push.org",imageURL:"/assets/blog/authors/authorpush.png",key:"push"}],frontMatter:{slug:"geting-started-with-push-sdk-socket-api",title:"Getting Started with Push SDK: Socket API\ud83d\udd14",authors:["push"],image:"./cover-image.webp",tags:["Web3","Blockchain","Blockchain Development","Developer"]},prevItem:{title:"February Monthly Recap \ud83d\ude80",permalink:"/blog/february-monthly-recap"},nextItem:{title:"Launching The Future of Web3 Messaging with Push Chat & Push Group Chat\ud83d\ude80",permalink:"/blog/launching-the-future-of-web3-messaging-with-push-chat-and-push-group-chat"}},u={image:n(9300).Z,authorsImageUrls:[void 0]},p=[{value:"Note on Addresses",id:"note-on-addresses",level:2},{value:"Creating a Socket Connection",id:"creating-a-socket-connection",level:2},{value:"For Notifications",id:"for-notifications",level:2},{value:"For Push Chat",id:"for-push-chat",level:2},{value:"Connecting and Disconnecting",id:"connecting-and-disconnecting",level:2},{value:"Subscribing to Events",id:"subscribing-to-events",level:2},{value:"About Push Protocol",id:"about-push-protocol",level:3}],h={toc:p},d="wrapper";function k(e){var t=e.components,i=(0,a.Z)(e,c);return(0,s.kt)(d,(0,o.Z)({},h,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Cover image of Getting Started with Push SDK: Socket API\ud83d\udd14",src:n(9300).Z,width:"1100",height:"578"})),(0,s.kt)("p",null,"The Socket API is a package that helps you connect to the Push backend using WebSockets, built on top of ",(0,s.kt)("a",{href:"https://socket.io/docs/v4/client-api/"},(0,s.kt)("b",null,"Socket.IO")),". With this API, you can easily subscribe to real-time notifications and updates from the Push network."),(0,s.kt)("p",null,"In this article, we\u2019ll go over the PUSH-SDK Socket API and how to use it in your dApp."),(0,s.kt)("h2",{id:"note-on-addresses"},"Note on Addresses"),(0,s.kt)("p",null,"In any of the specified methods (unless explicitly stated otherwise), you can use either CAIP format (specifically CAIP-10) or the ETH address format."),(0,s.kt)("p",null,"Recall that CAIP, or Chain Agnostic Improvement Proposal, is a way to describe standards for blockchain projects that are not specific to a single chain. It was developed by the Ethereum Improvement Proposal (EIP) process and is used to identify and encode information about Ethereum addresses, contract addresses, and other crypto-assets. For example, an ETH mainnet address would be in the form:"),(0,s.kt)("b",null,"eip155:1:0xab16a96d359ec26a11e2c2b3d8f8b8942d5bfcdb"),(0,s.kt)("br",null),(0,s.kt)("br",null),(0,s.kt)("blockquote",null,"The sockets API uses CAIP-10 (but defaults to the Ethereum address format), which is a specific proposal within the CAIP specification that focuses on the identification of blockchain addresses. It defines a format for representing addresses in a way that is both chain-agnostic and human-readable."),(0,s.kt)("p",null,"The ETH address format is supported for backwards compatibility. For example, an ETH mainnet address would be in the form ",(0,s.kt)("b",null,"0xab16a96d359ec26a11e")),(0,s.kt)("h2",{id:"creating-a-socket-connection"},"Creating a Socket Connection"),(0,s.kt)("p",null,"To create a socket connection, you\u2019ll need to create a socket connection object."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"createSocketConnection(options: SocketConnectionOptions): SocketConnection\n")),(0,s.kt)("p",null,"You can use the ",(0,s.kt)("b",null,"createSocketConnection")," method to create a socket connection object. This method takes an options object as an argument, which allows you to specify the following parameters:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"user")," (",(0,s.kt)("b",null,"string"),", required): The user account address, in ",(0,s.kt)("a",{href:"https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-10.md#test-cases"},"CAIP")," format."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"env")," (",(0,s.kt)("b",null,"string"),", optional, default: ",(0,s.kt)("b",null,"'prod'"),"): The API environment to connect to. Can be ",(0,s.kt)("b",null,"'prod'"),", ",(0,s.kt)("b",null,"'staging'"),", or ",(0,s.kt)("b",null,"'dev'"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"socketOptions")," (",(0,s.kt)("b",null,"object"),", optional): Options to pass to ",(0,s.kt)("a",{href:"https://socket.io/docs/v4/client-options/"},"SocketIO"),".")),(0,s.kt)("p",null,"This method returns a ",(0,s.kt)("b",null,"SocketConnection")," object that you can use to connect, disconnect, and subscribe to events."),(0,s.kt)("h2",{id:"for-notifications"},"For Notifications"),(0,s.kt)("p",null,"To create a socket connection for notifications, you\u2019ll need to create a socket connection object."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const pushSDKSocket = createSocketConnection({\nuser: 'eip155:5:0xab16a96d359ec26a11e2c2b3d8f8b8942d5bfcdb', // CAIP-10 format\nenv: 'staging',\nsocketOptions: { autoConnect: false }\n});\n")),(0,s.kt)("h2",{id:"for-push-chat"},"For Push Chat"),(0,s.kt)("p",null,"To create a socket connection for chat, you should define the socket type as \u201cchat\u201d when instantiating the socket client. The user address can be in any format, including non-CAIP-10 formats."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const pushSDKSocket = createSocketConnection({\n user: '0xFd6C2fE69bE13d8bE379CCB6c9306e74193EC1A9',\n env: 'staging',\n apiKey: 'jVPMCRom1B.iDRMswdehJG7NpHDiECIHwYMMv6k2KzkPJscFIDyW8TtSnk4blYnGa8DIkfuacU0',\n socketType: 'chat',\n socketOptions: { autoConnect: true, reconnectionAttempts: 3 }\n});\n")),(0,s.kt)("p",null,"This method takes an options object as an argument, which allows you to specify the following parameters:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"user")," (",(0,s.kt)("b",null,"string"),", required): The user account address."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"env")," (",(0,s.kt)("b",null,"string"),", optional, default: ",(0,s.kt)("b",null,"'prod'"),"): The API environment to connect to. Can be ",(0,s.kt)("b",null,"'prod'"),", ",(0,s.kt)("b",null,"'staging'"),", or ",(0,s.kt)("b",null,"'dev'"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"apiKey")," (",(0,s.kt)("b",null,"string"),", optional): The API key to use for authentication."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"socketType")," (",(0,s.kt)("b",null,"string"),", optional, default: ",(0,s.kt)("b",null,"'notification'"),"): The type of socket connection to create. Can be ",(0,s.kt)("b",null,"'notification'")," or ",(0,s.kt)("b",null,"'chat'"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"socketOptions")," (",(0,s.kt)("b",null,"object"),", optional): Options to pass to ",(0,s.kt)("a",{href:"https://socket.io/docs/v4/client-options/"},"SocketIO"),".")),(0,s.kt)("p",null,"This method returns a ",(0,s.kt)("b",null,"SocketConnection")," object that you can use to connect, disconnect, and subscribe to events."),(0,s.kt)("h2",{id:"connecting-and-disconnecting"},"Connecting and Disconnecting"),(0,s.kt)("p",null,"Once you have a ",(0,s.kt)("b",null,"SocketConnection")," object, you can use the ",(0,s.kt)("b",null,"connect")," and ",(0,s.kt)("b",null,"disconnect")," methods to establish or close the connection:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"SocketConnection.connect(): void\n")),(0,s.kt)("p",null,"Use the ",(0,s.kt)("b",null,"connect")," method to establish a connection to the backend."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"SocketConnection.disconnect(): void\n")),(0,s.kt)("p",null,"Use the ",(0,s.kt)("b",null,"disconnect")," method to close the connection to the backend."),(0,s.kt)("h2",{id:"subscribing-to-events"},"Subscribing to Events"),(0,s.kt)("p",null,"Once you have a connection, you can subscribe to events to receive updates in real-time."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"SocketConnection.on(event: SocketEvent, callback: (data: any) => void): \n")),(0,s.kt)("p",null,"Use the ",(0,s.kt)("b",null,"on")," method to subscribe to a socket event. This method takes an event name and a callback function as arguments. The callback function will be called whenever the specified event is triggered."),(0,s.kt)("p",null,"The following events are supported:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"EVENTS.CONNECT:")," Triggered when the socket connection is established."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"EVENTS.DISCONNECT:")," Triggered when the socket connection is closed."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"EVENTS.USER_FEEDS:")," Triggered when a new notification is received by the user after the last socket connection."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"EVENTS.USER_SPAM_FEEDS:")," Triggered when a new spam notification is received by the user after the last socket connection."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("b",null,"EVENTS.CHAT_RECEIVED_MESSAGE:")," Triggered when a new chat message is received.")),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const pushSDKSocket = createSocketConnection({\n user: 'eip155:5:0xab16a96d359ec26a11e2c2b3d8f8b8942d5bfcdb',\n env: 'staging',\n socketOptions: { autoConnect: false }\n});\npushSDKSocket.connect();\npushSDKSocket.on(EVENTS.CONNECT, () => {\n console.log('Connected to socket!');\n});\npushSDKSocket.on(EVENTS.DISCONNECT, () => {\n console.log('Disconnected from socket!');\n});\npushSDKSocket.on(EVENTS.USER_FEEDS, (feedItem) => {\n console.log(`Received notification: ${feedItem.title}`);\n});\npushSDKSocket.on(EVENTS.USER_SPAM_FEEDS, (feedItem) => {\n console.log(`Received spam notification: ${feedItem.title}`);\n});\npushSDKSocket.on(EVENTS.CHAT_RECEIVED_MESSAGE, (message) => {\n console.log(`Received chat message: ${message.text}`);\n});\n")),(0,s.kt)("center",null,(0,s.kt)("b",null,".   .   .")),(0,s.kt)("p",null,"That\u2019s it! You now know how to use the main features of the Push Protocol Socket API to add push notification functionality to your application\ud83c\udf89"),(0,s.kt)("p",null,"We\u2019ll cover other parts of the Push SDK in coming posts so stay tuned!"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.push.org/developers/developer-tooling/push-sdk/sdk-packages-details/pushprotocol-socket"},"Push Protocol SDK documentation here")," \u2014 if you\u2019d like more reference material to chew on."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/ethereum-push-notification-service/push-sdk"},"Push SDK on GitHub")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://discord.gg/pushprotocol"},"Our Discord")," \u2014 we\u2019ve got devs ready to give your project whatever support and consultation you need."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.push.org/developers/"},"Push developer docs")," to get started on building right away!")),(0,s.kt)("p",null,"#PoweredbyPush"),(0,s.kt)("h3",{id:"about-push-protocol"},"About Push Protocol"),(0,s.kt)("p",null,"Push is the communication protocol of web3. Push protocol enables cross-chain notifications and messaging for dapps, wallets, and services tied to wallet addresses in an open, gasless, and platform-agnostic fashion. The open communication layer allows any crypto wallet /frontend to tap into the network and get the communication across."),(0,s.kt)("p",null,"To keep up-to-date with Push Protocol: ",(0,s.kt)("a",{parentName:"p",href:"https://push.org/"},"Website"),", ",(0,s.kt)("a",{parentName:"p",href:"https://twitter.com/pushprotocol"},"Twitter"),", ",(0,s.kt)("a",{parentName:"p",href:"https://t.me/epnsproject"},"Telegram"),", ",(0,s.kt)("a",{parentName:"p",href:"https://discord.gg/pushprotocol"},"Discord"),", ",(0,s.kt)("a",{parentName:"p",href:"https://www.youtube.com/c/EthereumPushNotificationService"},"YouTube"),", and ",(0,s.kt)("a",{parentName:"p",href:"https://linktr.ee/pushprotocol"},"Linktree"),"."))}k.isMDXComponent=!0},9300:function(e,t,n){t.Z=n.p+"assets/images/cover-image-2cebd69b4d9f418eb8e07d0fa8fd87ee.webp"}}]);