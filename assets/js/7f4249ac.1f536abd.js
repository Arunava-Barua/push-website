"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[85301],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return b}});var i=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,i,a=function(t,e){if(null==t)return{};var n,i,a={},o=Object.keys(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=i.createContext({}),u=function(t){var e=i.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},c=function(t){var e=u(t.components);return i.createElement(s.Provider,{value:e},t.children)},f="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,s=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),f=u(n),d=a,b=f["".concat(s,".").concat(d)]||f[d]||p[d]||o;return n?i.createElement(b,r(r({ref:e},c),{},{components:n})):i.createElement(b,r({ref:e},c))}));function b(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[f]="string"==typeof t?t:a,r[1]=l;for(var u=2;u<o;u++)r[u]=n[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:function(t,e,n){n.d(e,{Z:function(){return r}});var i=n(67294),a=n(86010),o={tabItem:"tabItem_Ymn6"};function r(t){var e=t.children,n=t.hidden,r=t.className;return i.createElement("div",{role:"tabpanel",className:(0,a.default)(o.tabItem,r),hidden:n},e)}},74866:function(t,e,n){n.d(e,{Z:function(){return k}});var i=n(87462),a=n(67294),o=n(86010),r=n(12466),l=n(16550),s=n(91980),u=n(67392),c=n(50012);function f(t){return function(t){var e,n;return null!==(e=null===(n=a.Children.map(t,(function(t){if(!t||(0,a.isValidElement)(t)&&(e=t.props)&&"object"==typeof e&&"value"in e)return t;var e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof t.type?t.type:t.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===n?void 0:n.filter(Boolean))&&void 0!==e?e:[]}(t).map((function(t){var e=t.props;return{value:e.value,label:e.label,attributes:e.attributes,default:e.default}}))}function p(t){var e=t.values,n=t.children;return(0,a.useMemo)((function(){var t=null!=e?e:f(n);return function(t){var e=(0,u.l)(t,(function(t,e){return t.value===e.value}));if(e.length>0)throw new Error('Docusaurus error: Duplicate values "'+e.map((function(t){return t.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(t),t}),[e,n])}function d(t){var e=t.value;return t.tabValues.some((function(t){return t.value===e}))}function b(t){var e=t.queryString,n=void 0!==e&&e,i=t.groupId,o=(0,l.k6)(),r=function(t){var e=t.queryString,n=void 0!==e&&e,i=t.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=i?i:null}({queryString:n,groupId:i});return[(0,s._X)(r),(0,a.useCallback)((function(t){if(r){var e=new URLSearchParams(o.location.search);e.set(r,t),o.replace(Object.assign({},o.location,{search:e.toString()}))}}),[r,o])]}function m(t){var e,n,i,o,r=t.defaultValue,l=t.queryString,s=void 0!==l&&l,u=t.groupId,f=p(t),m=(0,a.useState)((function(){return function(t){var e,n=t.defaultValue,i=t.tabValues;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+i.map((function(t){return t.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var a=null!==(e=i.find((function(t){return t.default})))&&void 0!==e?e:i[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:r,tabValues:f})})),y=m[0],v=m[1],h=b({queryString:s,groupId:u}),g=h[0],N=h[1],k=(e=function(t){return t?"docusaurus.tab."+t:null}({groupId:u}.groupId),n=(0,c.Nk)(e),i=n[0],o=n[1],[i,(0,a.useCallback)((function(t){e&&o.set(t)}),[e,o])]),w=k[0],T=k[1],O=function(){var t=null!=g?g:w;return d({value:t,tabValues:f})?t:null}();return(0,a.useLayoutEffect)((function(){O&&v(O)}),[O]),{selectedValue:y,selectValue:(0,a.useCallback)((function(t){if(!d({value:t,tabValues:f}))throw new Error("Can't select invalid tab value="+t);v(t),N(t),T(t)}),[N,T,f]),tabValues:f}}var y=n(72389),v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(t){var e=t.className,n=t.block,l=t.selectedValue,s=t.selectValue,u=t.tabValues,c=[],f=(0,r.o5)().blockElementScrollPositionUntilNextRender,p=function(t){var e=t.currentTarget,n=c.indexOf(e),i=u[n].value;i!==l&&(f(e),s(i))},d=function(t){var e,n=null;switch(t.key){case"Enter":p(t);break;case"ArrowRight":var i,a=c.indexOf(t.currentTarget)+1;n=null!==(i=c[a])&&void 0!==i?i:c[0];break;case"ArrowLeft":var o,r=c.indexOf(t.currentTarget)-1;n=null!==(o=c[r])&&void 0!==o?o:c[c.length-1]}null===(e=n)||void 0===e||e.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.default)("tabs",{"tabs--block":n},e)},u.map((function(t){var e=t.value,n=t.label,r=t.attributes;return a.createElement("li",(0,i.Z)({role:"tab",tabIndex:l===e?0:-1,"aria-selected":l===e,key:e,ref:function(t){return c.push(t)},onKeyDown:d,onClick:p},r,{className:(0,o.default)("tabs__item",v.tabItem,null==r?void 0:r.className,{"tabs__item--active":l===e})}),null!=n?n:e)})))}function g(t){var e=t.lazy,n=t.children,i=t.selectedValue,o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){var r=o.find((function(t){return t.props.value===i}));return r?(0,a.cloneElement)(r,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map((function(t,e){return(0,a.cloneElement)(t,{key:e,hidden:t.props.value!==i})})))}function N(t){var e=m(t);return a.createElement("div",{className:(0,o.default)("tabs-container",v.tabList)},a.createElement(h,(0,i.Z)({},t,e)),a.createElement(g,(0,i.Z)({},t,e)))}function k(t){var e=(0,y.Z)();return a.createElement(N,(0,i.Z)({key:String(e)},t))}},47973:function(t,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return f}});var i=n(87462),a=n(63366),o=(n(67294),n(3905)),r=(n(74866),n(85162),n(23734),["components"]),l={id:"docs-notifications-develop-types-of-notification",title:"Types of Notification",hide_title:!0,slug:"./types-of-notification",displayed_sidebar:"pushNotificationSidebar",sidebar_position:11,image:"/assets/docs/previews/docs_notifications_develop--types_of_notification.png"},s="Types of notification overview",u={unversionedId:"notifications/build/docs-notifications-develop-types-of-notification",id:"notifications/build/docs-notifications-develop-types-of-notification",title:"Types of Notification",description:"Before sending notifications, it's important to learn about their types to help in choosing what notifications you want to send and when.",source:"@site/docs/notifications/01-build/11-Develop-Types-Of-Notification.mdx",sourceDirName:"notifications/01-build",slug:"/notifications/build/types-of-notification",permalink:"/docs/notifications/build/types-of-notification",draft:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-website/blob/main/docs/notifications/01-build/11-Develop-Types-Of-Notification.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{id:"docs-notifications-develop-types-of-notification",title:"Types of Notification",hide_title:!0,slug:"./types-of-notification",displayed_sidebar:"pushNotificationSidebar",sidebar_position:11,image:"/assets/docs/previews/docs_notifications_develop--types_of_notification.png"},sidebar:"pushNotificationSidebar",previous:{title:"Fetch Notifications",permalink:"/docs/notifications/build/fetch-notifications"},next:{title:"Send Notification",permalink:"/docs/notifications/build/send-notification"}},c={},f=[{value:"Types of Notification",id:"types-of-notification",level:2},{value:"Broadcast Notification (Type 1)",id:"broadcast-notification-type-1",level:3},{value:"Targeted Notification (Type 3)",id:"targeted-notification-type-3",level:3},{value:"Subset Notification (Type 4)",id:"subset-notification-type-4",level:3}],p={toc:f},d="wrapper";function b(t){var e=t.components,n=(0,a.Z)(t,r);return(0,o.kt)(d,(0,i.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"types-of-notification-overview"},"Types of notification overview"),(0,o.kt)("p",null,"Before sending notifications, it's important to learn about their types to help in choosing what notifications you want to send and when. "),(0,o.kt)("head",null,(0,o.kt)("title",null,"Types of Notifications | Push Notifications | Push Documentation")),(0,o.kt)("h2",{id:"types-of-notification"},"Types of Notification"),(0,o.kt)("p",null,"Push Protocol supports sending the following types of notifications to users of your protocol \u2014"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Notification Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Identifier"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Broadcast"),(0,o.kt)("td",{parentName:"tr",align:null},"1"),(0,o.kt)("td",{parentName:"tr",align:null},"This type of notification is broadcasted or sent to all the subscribers of a channel at once.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Targetted"),(0,o.kt)("td",{parentName:"tr",align:null},"3"),(0,o.kt)("td",{parentName:"tr",align:null},"This type of notification is sent to a single wallet address.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Subset"),(0,o.kt)("td",{parentName:"tr",align:null},"4"),(0,o.kt)("td",{parentName:"tr",align:null},"This type of notification is sent to a a subset (or a group) of your channel subscribers.")))),(0,o.kt)("h3",{id:"broadcast-notification-type-1"},"Broadcast Notification (Type 1)"),(0,o.kt)("p",null,"This type of notification is broadcasted or sent to all the subscribers of a channel at once."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// userAlice.channel.send([recipients], {options?})\n// to send a broadcast notification - pass '*' in recipients array\nconst broadcastNotif = await userAlice.channel.send(['*'], {\n  notification: { title: 'test', body: 'test' },\n})\n")),(0,o.kt)("h3",{id:"targeted-notification-type-3"},"Targeted Notification (Type 3)"),(0,o.kt)("p",null,"This type of notification is sent to a single wallet address."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// userAlice.channel.send([recipients], {options?})\n// to send a targeted notification - pass that single wallet address in recipients array\nconst targetedNotif = await userAlice.channel.send(['0x99A08ac6254dcf7ccc37CeC662aeba8eFA666666'], {\n  notification: {\n    title: 'test',\n    body: 'test',\n  },\n})\n")),(0,o.kt)("h3",{id:"subset-notification-type-4"},"Subset Notification (Type 4)"),(0,o.kt)("p",null,"This type of notification is sent to a a subset (or a group) of your channel subscribers."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// userAlice.channel.send([recipients], {options?})\n// to send a subset notification - pass the list of wallet address in recipients array\nconst subsetNotif = await userAlice.channel.send(\n  [randomWallet1, randomWallet2, signer.address, '0x99A08ac6254dcf7ccc37CeC662aeba8eFA666666'],\n  {\n    notification: {\n      title: 'test',\n      body: 'test',\n    },\n  }\n)\n")))}b.isMDXComponent=!0}}]);