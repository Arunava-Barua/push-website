"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[90163],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},f="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=u(n),p=i,m=f["".concat(s,".").concat(p)]||f[p]||d[p]||r;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[f]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},85162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(67294),i=n(86010),r={tabItem:"tabItem_Ymn6"};function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,i.default)(r.tabItem,o),hidden:n},t)}},74866:function(e,t,n){n.d(t,{Z:function(){return k}});var a=n(87462),i=n(67294),r=n(86010),o=n(12466),l=n(16550),s=n(91980),u=n(67392),c=n(50012);function f(e){return function(e){var t,n;return null!==(t=null===(n=i.Children.map(e,(function(e){if(!e||(0,i.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===n?void 0:n.filter(Boolean))&&void 0!==t?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function d(e){var t=e.values,n=e.children;return(0,i.useMemo)((function(){var e=null!=t?t:f(n);return function(e){var t=(0,u.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function p(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function m(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,r=(0,l.k6)(),o=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,s._X)(o),(0,i.useCallback)((function(e){if(o){var t=new URLSearchParams(r.location.search);t.set(o,e),r.replace(Object.assign({},r.location,{search:t.toString()}))}}),[o,r])]}function b(e){var t,n,a,r,o=e.defaultValue,l=e.queryString,s=void 0!==l&&l,u=e.groupId,f=d(e),b=(0,i.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var i=null!==(t=a.find((function(e){return e.default})))&&void 0!==t?t:a[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:o,tabValues:f})})),v=b[0],h=b[1],g=m({queryString:s,groupId:u}),y=g[0],N=g[1],k=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),n=(0,c.Nk)(t),a=n[0],r=n[1],[a,(0,i.useCallback)((function(e){t&&r.set(e)}),[t,r])]),T=k[0],E=k[1],w=function(){var e=null!=y?y:T;return p({value:e,tabValues:f})?e:null}();return(0,i.useLayoutEffect)((function(){w&&h(w)}),[w]),{selectedValue:v,selectValue:(0,i.useCallback)((function(e){if(!p({value:e,tabValues:f}))throw new Error("Can't select invalid tab value="+e);h(e),N(e),E(e)}),[N,E,f]),tabValues:f}}var v=n(72389),h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){var t=e.className,n=e.block,l=e.selectedValue,s=e.selectValue,u=e.tabValues,c=[],f=(0,o.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==l&&(f(t),s(a))},p=function(e){var t,n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var a,i=c.indexOf(e.currentTarget)+1;n=null!==(a=c[i])&&void 0!==a?a:c[0];break;case"ArrowLeft":var r,o=c.indexOf(e.currentTarget)-1;n=null!==(r=c[o])&&void 0!==r?r:c[c.length-1]}null===(t=n)||void 0===t||t.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.default)("tabs",{"tabs--block":n},t)},u.map((function(e){var t=e.value,n=e.label,o=e.attributes;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:function(e){return c.push(e)},onKeyDown:p,onClick:d},o,{className:(0,r.default)("tabs__item",h.tabItem,null==o?void 0:o.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function y(e){var t=e.lazy,n=e.children,a=e.selectedValue,r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var o=r.find((function(e){return e.props.value===a}));return o?(0,i.cloneElement)(o,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function N(e){var t=b(e);return i.createElement("div",{className:(0,r.default)("tabs-container",h.tabList)},i.createElement(g,(0,a.Z)({},e,t)),i.createElement(y,(0,a.Z)({},e,t)))}function k(e){var t=(0,v.Z)();return i.createElement(N,(0,a.Z)({key:String(t)},e))}},11688:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return u},metadata:function(){return f},toc:function(){return p}});var a=n(87462),i=n(63366),r=(n(67294),n(3905)),o=n(74866),l=n(85162),s=["components"],u={id:"docs-notifications-develop-stream-notifications",title:"Stream Notifications",hide_title:!0,slug:"./stream-notifications",displayed_sidebar:"pushNotificationSidebar",sidebar_position:15,image:"/assets/docs/previews/docs_notifications_develop--stream_notifications.png"},c="Stream notifications overview",f={unversionedId:"notifications/build/docs-notifications-develop-stream-notifications",id:"notifications/build/docs-notifications-develop-stream-notifications",title:"Stream Notifications",description:"These APIs enable you to receive notifications ( inbox or spam ) in real time without polling the API. Push notification achieves this by the use of sockets.",source:"@site/docs/notifications/01-build/15-Develop-Stream-Notifications.mdx",sourceDirName:"notifications/01-build",slug:"/notifications/build/stream-notifications",permalink:"/docs/notifications/build/stream-notifications",draft:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-website/blob/main/docs/notifications/01-build/15-Develop-Stream-Notifications.mdx",tags:[],version:"current",sidebarPosition:15,frontMatter:{id:"docs-notifications-develop-stream-notifications",title:"Stream Notifications",hide_title:!0,slug:"./stream-notifications",displayed_sidebar:"pushNotificationSidebar",sidebar_position:15,image:"/assets/docs/previews/docs_notifications_develop--stream_notifications.png"},sidebar:"pushNotificationSidebar",previous:{title:"Notification Styling",permalink:"/docs/notifications/build/styling-notificaiton-content"},next:{title:"Integrating Notifications",permalink:"/docs/notifications/build/integrating-notifications"}},d={},p=[{value:"Stream Notification API",id:"stream-notification-api",level:2},{value:"Stream notification events",id:"stream-notification-events",level:3}],m={toc:p},b="wrapper";function v(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)(b,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"stream-notifications-overview"},"Stream notifications overview"),(0,r.kt)("p",null,"These APIs enable you to receive notifications ( inbox or spam ) in real time without polling the API. Push notification achieves this by the use of sockets."),(0,r.kt)("head",null,(0,r.kt)("title",null,"Stream Notifications | Push Notifications | Push Documentation")),(0,r.kt)("h2",{id:"stream-notification-api"},"Stream Notification API"),(0,r.kt)(o.Z,{className:"codetabs",groupId:"code-examples",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"js",attributes:{className:"codetab js"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// userAlice.stream(account?, {options?})\n// Initial setup\nconst stream = userAlice.stream(account?, { \n  // stream supports other products as well, such as STREAM.CHAT, STREAM.CHAT_OPS \n  // more info can be found at push.org/docs/chat\n    listen: [STREAM.NOTIF], \n    filter?: {\n        channels?: ['*'], // pass in specific channels to only listen to those\n        chats?: ['*'], // pass in specific chat ids to only listen to those\n    },\n    connection?: {\n        auto?: true, // should connection be automatic, else need to call stream.connect();\n        retries?: 3, // number of retries in case of error\n    },\n    raw?: false // enable true to show all data\n})\n\n// Listen for notifications\nuserAlice.stream.on(STREAM.NOTIF, (data: any) => {\n  console.log(data)\n})\n")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"stream-notification-events"},"Stream notification events"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"When is it triggered?"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"EVENTS")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"STREAM.NOTIF")),(0,r.kt)("td",{parentName:"tr",align:null},"Whenever a new notification is emitted for the wallet")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"STREAM.CONNECT")),(0,r.kt)("td",{parentName:"tr",align:null},"Whenever the stream establishes connection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"STREAM.DISCONNECT")),(0,r.kt)("td",{parentName:"tr",align:null},"Whenever the stream establishes connection")))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Expected response (STEAM.NOTIF - Notification inbox stream)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n  "event": "notification.inbox",\n  "origin": "other",\n  "timestamp": "2023-10-06T01:55:51.000Z",\n  "from": "0xfFA1aF9E558B68bBC09ad74058331c100C135280",\n  "to": [\n    "eip155:0xffa1af9e558b68bbc09ad74058331c100c135280"\n  ],\n  "notifID": "1676",\n  "channel": {\n    "name": "Testing Goerli",\n    "icon": "https://gateway.ipfs.io/ipfs/bafybeifu3tisz7cntfnoolwe6tthi554b2cdl46jzcr5amo6swucyautzq/QmYZZnnEuTnzjkhhnRZWaHgYTeHsohLZEme9LomWRYQAZ5",\n    "url": "https://dev.push.org/"\n  },\n  "meta": {\n    "type": "NOTIFICATION.BROADCAST"\n  },\n  "message": {\n    "notification": {\n      "title": "Testing Goerli - notification TITLE:",\n      "body": "notification BODY"\n    },\n    "payload": {\n      "title": "payload title",\n      "body": "sample msg body",\n      "cta": "",\n      "embed": "",\n      "meta": {\n          "domain": "push.org"\n      }\n    }\n  },\n  "config": {\n    "expiry": null,\n    "silent": false,\n    "hidden": false\n  },\n  "source": "ETH_TEST_GOERLI",\n  "raw": {\n    "verificationProof": "eip712v2:0xf2b50f07c7cdae4a493860554301dc017dd6f819f92db3aba534dffde210bfaa0f545818e919c42c3bb51181339af33ad83e3bc691ada7fcccdcbc7fb3b3abd91b::uid::feaa2d31-85ec-47d2-b38c-6f797f637de7"\n  }\n}\n'))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Expected response (STEAM.NOTIF - Notification spam stream)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n  "event": "notification.spam",\n  "origin": "other",\n  "timestamp": "2023-10-06T01:55:51.000Z",\n  "from": "0xfFA1aF9E558B68bBC09ad74058331c100C135280",\n  "to": [\n    "eip155:0x1f1a304af17f22cac91eeca5f31a0f814d752377"\n  ],\n  "notifID": "1677",\n  "channel": {\n    "name": "Testing Goerli",\n    "icon": "https://gateway.ipfs.io/ipfs/bafybeifu3tisz7cntfnoolwe6tthi554b2cdl46jzcr5amo6swucyautzq/QmYZZnnEuTnzjkhhnRZWaHgYTeHsohLZEme9LomWRYQAZ5",\n    "url": "https://dev.push.org/"\n  },\n  "meta": {\n    "type": "NOTIFICATION.TARGETED"\n  },\n  "message": {\n    "notification": {\n      "title": "Testing Goerli - notification TITLE:",\n      "body": "notification BODY"\n    },\n    "payload": {\n      "title": "payload title",\n      "body": "sample msg body",\n      "cta": "",\n      "embed": "",\n      "meta": {\n          "domain": "push.org"\n      }\n    }\n  },\n  "config": {\n    "expiry": null,\n    "silent": false,\n    "hidden": false\n  },\n  "source": "ETH_TEST_GOERLI",\n  "raw": {\n    "verificationProof": "eip712v2:0x6b903f16d0ce87483643e1502e7416203cb7ecef0e947a497f0fb6fbe1c43c3511f2f602b757ab02c1be7daa07f3872ee14e4d05134f1ecb3d11fe58324422c01c::uid::6c0fad10-d1eb-4779-84d3-3a96bd96263f"\n  }\n}\n'))))}v.isMDXComponent=!0}}]);