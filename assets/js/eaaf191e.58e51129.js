"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[21039],{3905:function(t,n,e){e.d(n,{Zo:function(){return p},kt:function(){return f}});var a=e(67294);function i(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function r(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,a)}return e}function l(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?r(Object(e),!0).forEach((function(n){i(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function o(t,n){if(null==t)return{};var e,a,i=function(t,n){if(null==t)return{};var e,a,i={},r=Object.keys(t);for(a=0;a<r.length;a++)e=r[a],n.indexOf(e)>=0||(i[e]=t[e]);return i}(t,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)e=r[a],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(i[e]=t[e])}return i}var d=a.createContext({}),u=function(t){var n=a.useContext(d),e=n;return t&&(e="function"==typeof t?t(n):l(l({},n),t)),e},p=function(t){var n=u(t.components);return a.createElement(d.Provider,{value:n},t.children)},s="mdxType",c={inlineCode:"code",wrapper:function(t){var n=t.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(t,n){var e=t.components,i=t.mdxType,r=t.originalType,d=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),s=u(e),m=i,f=s["".concat(d,".").concat(m)]||s[m]||c[m]||r;return e?a.createElement(f,l(l({ref:n},p),{},{components:e})):a.createElement(f,l({ref:n},p))}));function f(t,n){var e=arguments,i=n&&n.mdxType;if("string"==typeof t||i){var r=e.length,l=new Array(r);l[0]=m;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=t,o[s]="string"==typeof t?t:i,l[1]=o;for(var u=2;u<r;u++)l[u]=e[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,e)}m.displayName="MDXCreateElement"},85162:function(t,n,e){e.d(n,{Z:function(){return l}});var a=e(67294),i=e(86010),r={tabItem:"tabItem_Ymn6"};function l(t){var n=t.children,e=t.hidden,l=t.className;return a.createElement("div",{role:"tabpanel",className:(0,i.default)(r.tabItem,l),hidden:e},n)}},74866:function(t,n,e){e.d(n,{Z:function(){return h}});var a=e(87462),i=e(67294),r=e(86010),l=e(12466),o=e(16550),d=e(91980),u=e(67392),p=e(50012);function s(t){return function(t){var n,e;return null!==(n=null===(e=i.Children.map(t,(function(t){if(!t||(0,i.isValidElement)(t)&&(n=t.props)&&"object"==typeof n&&"value"in n)return t;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof t.type?t.type:t.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===e?void 0:e.filter(Boolean))&&void 0!==n?n:[]}(t).map((function(t){var n=t.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}function c(t){var n=t.values,e=t.children;return(0,i.useMemo)((function(){var t=null!=n?n:s(e);return function(t){var n=(0,u.l)(t,(function(t,n){return t.value===n.value}));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((function(t){return t.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(t),t}),[n,e])}function m(t){var n=t.value;return t.tabValues.some((function(t){return t.value===n}))}function f(t){var n=t.queryString,e=void 0!==n&&n,a=t.groupId,r=(0,o.k6)(),l=function(t){var n=t.queryString,e=void 0!==n&&n,a=t.groupId;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:e,groupId:a});return[(0,d._X)(l),(0,i.useCallback)((function(t){if(l){var n=new URLSearchParams(r.location.search);n.set(l,t),r.replace(Object.assign({},r.location,{search:n.toString()}))}}),[l,r])]}function k(t){var n,e,a,r,l=t.defaultValue,o=t.queryString,d=void 0!==o&&o,u=t.groupId,s=c(t),k=(0,i.useState)((function(){return function(t){var n,e=t.defaultValue,a=t.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+e+'" but none of its children has the corresponding value. Available values are: '+a.map((function(t){return t.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return e}var i=null!==(n=a.find((function(t){return t.default})))&&void 0!==n?n:a[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:l,tabValues:s})})),N=k[0],g=k[1],b=f({queryString:d,groupId:u}),v=b[0],y=b[1],h=(n=function(t){return t?"docusaurus.tab."+t:null}({groupId:u}.groupId),e=(0,p.Nk)(n),a=e[0],r=e[1],[a,(0,i.useCallback)((function(t){n&&r.set(t)}),[n,r])]),C=h[0],w=h[1],I=function(){var t=null!=v?v:C;return m({value:t,tabValues:s})?t:null}();return(0,i.useLayoutEffect)((function(){I&&g(I)}),[I]),{selectedValue:N,selectValue:(0,i.useCallback)((function(t){if(!m({value:t,tabValues:s}))throw new Error("Can't select invalid tab value="+t);g(t),y(t),w(t)}),[y,w,s]),tabValues:s}}var N=e(72389),g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(t){var n=t.className,e=t.block,o=t.selectedValue,d=t.selectValue,u=t.tabValues,p=[],s=(0,l.o5)().blockElementScrollPositionUntilNextRender,c=function(t){var n=t.currentTarget,e=p.indexOf(n),a=u[e].value;a!==o&&(s(n),d(a))},m=function(t){var n,e=null;switch(t.key){case"Enter":c(t);break;case"ArrowRight":var a,i=p.indexOf(t.currentTarget)+1;e=null!==(a=p[i])&&void 0!==a?a:p[0];break;case"ArrowLeft":var r,l=p.indexOf(t.currentTarget)-1;e=null!==(r=p[l])&&void 0!==r?r:p[p.length-1]}null===(n=e)||void 0===n||n.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.default)("tabs",{"tabs--block":e},n)},u.map((function(t){var n=t.value,e=t.label,l=t.attributes;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,key:n,ref:function(t){return p.push(t)},onKeyDown:m,onClick:c},l,{className:(0,r.default)("tabs__item",g.tabItem,null==l?void 0:l.className,{"tabs__item--active":o===n})}),null!=e?e:n)})))}function v(t){var n=t.lazy,e=t.children,a=t.selectedValue,r=(Array.isArray(e)?e:[e]).filter(Boolean);if(n){var l=r.find((function(t){return t.props.value===a}));return l?(0,i.cloneElement)(l,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map((function(t,n){return(0,i.cloneElement)(t,{key:n,hidden:t.props.value!==a})})))}function y(t){var n=k(t);return i.createElement("div",{className:(0,r.default)("tabs-container",g.tabList)},i.createElement(b,(0,a.Z)({},t,n)),i.createElement(v,(0,a.Z)({},t,n)))}function h(t){var n=(0,N.Z)();return i.createElement(y,(0,a.Z)({key:String(n)},t))}},82202:function(t,n,e){e.r(n),e.d(n,{assets:function(){return c},contentTitle:function(){return p},default:function(){return N},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return m}});var a=e(87462),i=e(63366),r=(e(67294),e(3905)),l=e(74866),o=e(85162),d=(e(23734),["components"]),u={id:"docs-notifications-develop-send-notification",title:"Send Notification",hide_title:!0,slug:"./send-notification",displayed_sidebar:"pushNotificationSidebar",sidebar_position:12,image:"/assets/docs/previews/docs_notifications_develop--send_notification.png"},p="Send notification overview",s={unversionedId:"notifications/build/docs-notifications-develop-send-notification",id:"notifications/build/docs-notifications-develop-send-notification",title:"Send Notification",description:"This section covers all APIs related to sending notifications from a created channel.",source:"@site/docs/notifications/01-build/12-Develop-Send-Notification.mdx",sourceDirName:"notifications/01-build",slug:"/notifications/build/send-notification",permalink:"/docs/notifications/build/send-notification",draft:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-website/blob/main/docs/notifications/01-build/12-Develop-Send-Notification.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{id:"docs-notifications-develop-send-notification",title:"Send Notification",hide_title:!0,slug:"./send-notification",displayed_sidebar:"pushNotificationSidebar",sidebar_position:12,image:"/assets/docs/previews/docs_notifications_develop--send_notification.png"},sidebar:"pushNotificationSidebar",previous:{title:"Types of Notification",permalink:"/docs/notifications/build/types-of-notification"},next:{title:"Send Notification (via Smart Contract)",permalink:"/docs/notifications/build/send-notification-via-smart-contract"}},c={},m=[{value:"Send notification API",id:"send-notification-api",level:2},{value:"Send notification parameters",id:"send-notification-parameters",level:3},{value:"Send notification interface",id:"send-notification-interface",level:3}],f={toc:m},k="wrapper";function N(t){var n=t.components,e=(0,i.Z)(t,d);return(0,r.kt)(k,(0,a.Z)({},f,e,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"send-notification-overview"},"Send notification overview"),(0,r.kt)("p",null,"This section covers all APIs related to sending notifications from a created channel."),(0,r.kt)("head",null,(0,r.kt)("title",null,"Send Notification | Push Notifications | Push Documentation")),(0,r.kt)("h2",{id:"send-notification-api"},"Send notification API"),(0,r.kt)(l.Z,{className:"codetabs",groupId:"code-examples",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",attributes:{className:"codetab js"},default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// userAlice.channel.send([recipients], {options?})\nconst sendNotifRes = await userAlice.channel.send(['*'], {\n  notification: { title: 'test', body: 'test' },\n})\n")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"send-notification-parameters"},"Send notification parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Subtype"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"em"},"recipients"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string[]")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"An array of recipient addresses passed in ",(0,r.kt)("a",{parentName:"td",href:"/docs/notifications/important-concepts/#types-of-supported-wallet-address-account"},"any supported wallet address format"),". Possible values are: Broadcast -> ","[*]",", Targeted -> ","[0xA]",", Subset -> ","[0xA, 0xB]",", see ",(0,r.kt)("a",{parentName:"td",href:"/docs/notifications/build/types-of-notification"},"types of notifications")," for more info.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"em"},"options"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"NotificationOptions")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration options for sending notifications.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"em"},"options.notification"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"INotification")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing the notification's title and body. (Mandatory)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"em"},"options.notification.title"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"The title for the notification. If not provided, it is taken from notification.title.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"em"},"options.notification.body"))),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"The body of the notification. If not provided, it is taken from notification.body.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.payload")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IPayload")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing additional payload information for the notification.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.payload.title")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"The title for the notification. If not provided, it is taken from notification.title.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.payload.body")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"The body of the notification. If not provided, it is taken from notification.body.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.payload.cta")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Call to action for the notification.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.payload.index.index")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Index of notification setting for which the notificaiton needs to triggered")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.payload.index.value")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"For slider type only, pass the value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.payload.embed")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Media information like image/video links")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.payload.meta")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{ domain?: string, type: string, data: string }")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Metadata for the notification, including domain, type, and data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.config")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IConfig")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing configuration options for the notification.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.config.expiry")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Expiry time for the notification in seconds")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.config.silent")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates whether the notification is silent.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.config.hidden")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates whether the notification is hidden.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.advanced")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IAdvance")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"An object containing advanced options for the notification.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.advanced.graph")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{ id: string, counter: number }")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Advanced options related to the graph based notification.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.advanced.ipfs")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"IPFS information for the notification.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.advanced.minimal")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Minimal Payload type notification.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.advanced.chatid")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"For chat based notification.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.advanced.pgpPrivateKey")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"PGP private key for chat based notification.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"options.channel")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Channel address in CAIP. Mostly used when a delegator sends a notification on behalf of the channel")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: Parameters ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"em"},"in this style"))," are mandatory.")),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Expected response")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// PushAPI.payloads.sendNotification | Response - 204 OK\n"))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"send-notification-interface"},"Send notification interface"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface INotification {\n  title: string;\n  body: string;\n}\n\ninterface IPayload {\n  title?: string;\n  body?: string;\n  cta?: string;\n  embed?: string;\n  meta?: {\n    domain?: string;\n    type: string;\n    data: string;\n  };\n}\n\ninterface IConfig {\n  expiry?: number;\n  silent?: boolean;\n  hidden?: boolean;\n}\n\ninterface IAdvanced {\n  graph?: {\n    id: string;\n    counter: number;\n  };\n  ipfs?: string;\n  minimal?: string;\n  chatid?: string;\n  pgpPrivateKey?: string;\n}\n\ninterface NotificationOptions = {\n  notification: INotification;\n  payload?: IPayload;\n  config?: IConfig;\n  advanced?: IAdvance;\n  channel?: string;\n};\n\n// Usage example:\nconst apiResponse: ApiResponse = await userAlice.channel.send(recipients, { \n  // NotificationOptions - as per your given object structure \n});\n")))}N.isMDXComponent=!0}}]);